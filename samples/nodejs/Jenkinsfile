node(){
    def jdk = tool name: 'openjdk_1.8.0'
    env.JAVA_HOME = "${jdk}"
    def node = tool name: 'NodeJS_8.7.0', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'
    env.PATH = "${node}/bin:${env.PATH}"
        
    properties([
        buildDiscarder(logRotator(artifactNumToKeepStr: '30', numToKeepStr: '30')) 
    ])

    withCredentials([
        ...
        string(credentialsId: 'GITHUB_BENDER_TOKEN', variable: 'GH_TOKEN')
    ]) {
    
        stage('checkout'){
            step([$class: 'WsCleanup'])
            if("${env.RELEASE}"=="true") {
                sh "git clone https://${GH_TOKEN}@git-code.asw.zone/RVD/${<YOUR_PROJECT_NAME>}.git"
            } else {
                checkout scm
            }
        }
        stage('install & setup'){
            sh 'node -v'
            sh 'npm config set color false'
            sh "npm config set https-proxy ${env.HTTP_PROXY_URL}"
            sh "npm config set HTTP_PROXY ${env.HTTP_PROXY_URL}"
            sh "npm config set http_proxy ${env.HTTP_PROXY_URL}"
            sh "npm config set proxy ${env.HTTP_PROXY_URL}"
            sh 'npm install -g git+https://${GH_TOKEN}@git-code.asw.zone/RVD/bee-tools'
            sh 'npm install --silent'
            sh 'npm prune'
        }
        
        stage("requirement tracing") {
          // example: sh "PROXY=${env.HTTP_PROXY_URL} \
          //              bee oft --swad-version <version> trace doc"
        }

        stage("static code analysis") {
          // example: sh "npm run lint.src.ci"
        }

        stage("running unit tests") {
          // example: sh "npm run utest"
        }
         
        stage("build artifacts") {
          // example: sh "npm run build-artifacts"
        }


        stage("deploy API to ${env.STAGE} in ${env.REGION}") {
          sh "http_proxy=${env.HTTP_PROXY_URL} \
              https_proxy=${env.HTTP_PROXY_URL} \
              bee deploy --release=${env.RELEASE} --stage=${env.STAGE} --region=${env.REGION}"
        }

        stage("running itests") {
            // RUN INTEGRATION TESTS HERE
            //
            // try {
            //     sh "http_proxy=${env.HTTP_PROXY_URL} \
            //     https_proxy=${env.HTTP_PROXY_URL} \
            //     bee itest --test_spec='./test/itests/**/*.itest.yml' --region=${env.REGION} --test_result_file build/test-results/itest.xml"
                
            //     sh "http_proxy=${env.HTTP_PROXY_URL} \
            //     https_proxy=${env.HTTP_PROXY_URL} \
            //     bee itest --test_spec='./test/authtests/**/*.authtest.yml' --region=${env.REGION} --test_result_file build/test-results/authtest.xml"
            // } finally {
            //     junit '**/build/test-results/**/*.xml'
            // }
        }
        
        if("${env.RELEASE}"=="true") {
            def releaseVersion = readJSON file: '.bee/release.json'
            if(releaseVersion['nextVersion']) {
                stage("create release") {
                        sh "GH_TOKEN=${GH_TOKEN} \
                            GIT_BRANCH=master \
                            bee release"
                }
                stage("publish") {
                        sh "echo Publish CloudFormation Template.."
                        sh "http_proxy=${env.HTTP_PROXY_URL} \
                            https_proxy=${env.HTTP_PROXY_URL} \
                            bee publish"
                    
                }
            }
        }
    }
}
